{"version":3,"sources":["webpack:///./src/components/Hero.tsx","webpack:///./src/constants/services.tsx","webpack:///./src/components/Services.tsx","webpack:///./src/components/Jobs.tsx","webpack:///./src/pages/index.tsx"],"names":["defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","Underline","styled","div","theme","clrPrimary5","Header","header","clrPrimary10","Section","Hero","article","image","useStaticQuery","file","childImageSharp","fluid","className","to","options","height","width","speed","isStopped","id","icon","title","text","Services","Title","services","map","ser","key","Jobs","jobs","allStrapiJobs","nodes","useState","value","setValue","company","position","date","desc","index","strapiId","onClick","style","outline","res","name","query","Index","projects","data","allStrapiProjects","SEO","description","Layout","navColor","colorE","green","Projects","showLink"],"mappings":"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","file":"component---src-pages-index-tsx-038e783493a2a606d7e1.js","sourcesContent":["import React from \"react\"\nimport Image from \"gatsby-image\"\nimport { Link } from \"gatsby\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport SocialLinks from \"../constants/socialLinks\"\nimport styled from \"styled-components\"\nimport Lottie from \"react-lottie\"\nimport animationData from \"../constants/hero-white.json\"\n\nconst defaultOptions = {\n  loop: true,\n  autoplay: true,\n  animationData: animationData,\n  rendererSettings: {\n    preserveAspectRatio: \"xMidYMid slice\",\n  },\n}\n\nconst Underline = styled.div`\n  width: 5rem;\n  height: 0.25rem;\n  margin-bottom: 1.25rem;\n  background: ${({ theme }) => theme.clrPrimary5};\n  margin-left: auto;\n  margin-right: auto;\n`\n\nconst Header = styled.header`\n  margin-top: -5rem;\n  padding-top: 5rem;\n  height: 100vh;\n  background: ${({ theme }) => theme.clrPrimary10};\n  position: relative;\n  ${Underline} {\n    margin-bottom: 0.5rem;\n    margin-left: 0;\n  }\n  @media screen and (min-width: 992px) {\n    &::before {\n      content: \"\";\n      position: absolute;\n      top: 0;\n      left: 65%;\n      right: 0;\n      bottom: 0;\n      background: ${({ theme }) => theme.clrPrimary10};\n    }\n    h4 {\n      font-size: 0.85rem;\n    }\n  }\n  @media screen and (min-width: 1170px) {\n    h4 {\n      font-size: 1rem;\n      line-height: 1;\n    }\n  }\n`\nconst Section = styled.div`\n  width: 90vw;\n  margin: 0 auto;\n  max-width: 1170px;\n  height: 100%;\n  display: grid;\n  align-items: center;\n  @media screen and (min-width: 992px) {\n    width: 95vw;\n    grid-template-columns: repeat(12, 1fr);\n  }\n`\nconst HeroInfo = styled.article``\nconst HeroImg = styled.image``\n\n// ...GatsbyImageSharpFluid\nconst query = graphql`\n  {\n    file(relativePath: { eq: \"hero-img.png\" }) {\n      childImageSharp {\n        fluid {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n  }\n`\nconst Hero = () => {\n  const {\n    file: {\n      childImageSharp: { fluid },\n    },\n  } = useStaticQuery(query)\n\n  return (\n    <Header>\n      <Section>\n        <article className=\"hero-info\">\n          <div>\n            <Underline />\n            <h1>I'm Neezar</h1>\n            <h4>Fullstack developer</h4>\n            <Link to=\"/contact\" className=\"btn\">\n              contact me\n            </Link>\n            <SocialLinks />\n          </div>\n        </article>\n        <div className=\"hero-img\">\n          <Lottie\n            options={defaultOptions}\n            height={500}\n            width={500}\n            speed={2.5}\n            isStopped={false}\n          />\n        </div>\n      </Section>\n    </Header>\n  )\n}\n\nexport default Hero\n","import React from \"react\"\nimport { FaCode, FaSketch, FaAndroid, FaApple } from \"react-icons/fa\"\nexport default [\n  {\n    id: 1,\n    icon: <FaCode className=\"service-icon\" />,\n    title: \"Frontend development\",\n    text: `I'm using Nextjs which is a reactjs framework for my projects. I find the server side rendering and the ability to do dynamic import makes nextjs the best tool for building frontend webapps.`,\n  },\n  {\n    id: 2,\n    icon: <FaSketch className=\"service-icon\" />,\n    title: \"Backend development\",\n    text: `I'm using nodejs with typescript as my main backend framework. Mongodb or postgressql for the database for all of my apps. Depending on use case, my go to api would be graphql and rest`,\n  },\n  {\n    id: 3,\n    icon: <FaApple className=\"service-icon\" />,\n    title: \"Mobile developemnt\",\n    text: `I'm using React native with typescript . Expo managed for less native api reliant apps and expo bare for more all around app functionality`,\n  },\n]\n","import React from \"react\"\nimport Title from \"./Title\"\nimport services from \"../constants/services\"\nconst Services = () => {\n  return (\n    <section className=\"section bg-grey\">\n      <Title title=\"Skills\" />\n      <div className=\"section-center services-center\">\n        {services.map(ser => {\n          const { icon, id, text, title } = ser\n          return (\n            <article key={id} className=\"service\">\n              {icon}\n              <h4>{title}</h4>\n              <div className=\"underline\"></div>\n              <p>{text}</p>\n            </article>\n          )\n        })}\n      </div>\n    </section>\n  )\n}\n\nexport default Services\n","import React, { useState } from \"react\"\nimport Title from \"./Title\"\nimport { FaAngleDoubleRight } from \"react-icons/fa\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { Link } from \"gatsby\"\nimport { AllStrapiJobsQuery } from \"../generated/graphql\"\n\nconst query = graphql`\n  {\n    allStrapiJobs(sort: { fields: strapiId, order: ASC }) {\n      nodes {\n        strapiId\n        company\n        date\n        position\n        desc {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\nconst Jobs = () => {\n  const data: AllStrapiJobsQuery = useStaticQuery(query)\n  const {\n    allStrapiJobs: { nodes: jobs },\n  } = data\n  const [value, setValue] = useState(0)\n  const { company, position, date, desc } = jobs[value]\n\n  return (\n    <section className=\"section jobs\">\n      <Title title=\"experience\" />\n      <div className=\"jobs-center\">\n        <div className=\"btn-container\">\n          {jobs.map(({ strapiId, company }, index) => {\n            return (\n              <button\n                key={strapiId}\n                onClick={() => setValue(index)}\n                style={{ outline: \"none\" }}\n                className={`job-btn ${index === value && \"active-btn\"}`}\n              >\n                {company}\n              </button>\n            )\n          })}\n        </div>\n        <article className=\"job-info\">\n          <h3>{position}</h3>\n          <h4>{company}</h4>\n          <p className=\"job-date\">{date}</p>\n          {desc?.map(res => {\n            return (\n              <div key={res?.id} className=\"job-desc\">\n                <FaAngleDoubleRight className=\"job-icon\"></FaAngleDoubleRight>\n                <p>{res?.name}</p>\n              </div>\n            )\n          })}\n        </article>\n      </div>\n      <Link to=\"/about\" className=\"btn center-btn\">\n        more info\n      </Link>\n    </section>\n  )\n}\n\nexport default Jobs\n","import React, { FC, ReactNode, useState } from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport Hero from \"../components/Hero\"\nimport Services from \"../components/Services\"\nimport Jobs from \"../components/Jobs\"\nimport Projects from \"../components/Projects\"\nimport { AllStrapiProjectsFeatureQuery } from \"../generated/graphql\"\nimport { colorE } from \"../constants/colorEnum\"\nimport SEO from \"../components/SEO\"\n\ninterface PageData<D> {\n  data: D\n}\n\nconst Index: FC<PageData<AllStrapiProjectsFeatureQuery>> = ({ data }) => {\n  const { allStrapiProjects: projects } = data\n\n  return (\n    <>\n      <SEO\n        title=\"Rose Neezar | Home\"\n        description=\"overview portfolio site of rose neezar\"\n      />\n      <Layout navColor={colorE.green}>\n        <Hero />\n        <Services />\n        <Jobs />\n        <Projects\n          projects={projects.nodes}\n          title=\"featured projects\"\n          showLink\n        />\n      </Layout>\n    </>\n  )\n}\nexport default Index\n\nexport const query = graphql`\n  {\n    allStrapiProjects(filter: { featured: { eq: true } }) {\n      nodes {\n        github\n        id\n        description\n        title\n        url\n        image {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        stack {\n          id\n          title\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}